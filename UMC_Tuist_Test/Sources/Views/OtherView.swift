//
//  OtherView.swift
//  UMC_Tuist_Test
//
//  Created by ÌôçÏßÄÏö∞ on 3/23/25.
//

import SwiftUI
<<<<<<< HEAD
import Observation

struct OtherView: View {
    @AppStorage("nickname") var nickname: String = ""
    
    var body: some View {
        NavigationStack {
            VStack(spacing: 0) {
                VStack {
                    Spacer()
                    
                    HStack {
                        Text("Other")
                            .font(.mainTextBold24)
                        
                        Spacer()
                        
                        NavigationLink(destination: LoginView()) {
                            Image("logout")
                        }
                    }
                    .background(Color.white)
                    .padding(.horizontal, 24)
                    
                    Spacer().frame(height: 16)
                }
                .frame(maxWidth: 440, maxHeight: 120)
                
                VStack {
                    /*ÏÉÅÎã® Í≥†Í∞ù Í¥ÄÎ†® Ï†ïÎ≥¥ Í∑∏Î£π*/
                    VStack {
                        VStack {
                            HStack {
                                Text(nickname.isEmpty ? "(ÏûëÏÑ±Ìïú ÎãâÎÑ§ÏûÑ)" : "\(nickname)")
                                    .foregroundStyle(Color.green01)
                                Text("Îãò")
                            }
                            .font(.mainTextSemiBold24)
                            Text("ÌôòÏòÅÌï©ÎãàÎã§!üôåüèª")
                                .font(.mainTextSemiBold24)
                        }
                        Spacer()
                        
                        HStack {
                            ButtonView(title: "Î≥Ñ ÌûàÏä§ÌÜ†Î¶¨")
                            ButtonView(title: "Ï†ÑÏûêÏòÅÏàòÏ¶ù")
                            ButtonView(title: "ÎÇòÎßåÏùò Î©îÎâ¥")
                        }
                    }
                    .frame(maxWidth: 440, maxHeight: 209)
                    .padding(.top, 41)
                    
                    Spacer()
                    
                    /*Í≤∞Ï†ú*/
                    VStack(spacing: 0) {
                        HStack {
                            Text("Pay")
                                .font(.mainTextRegular18)
                            Spacer()
                        }
                        
                        HStack {
                            ImageAndTextView(title: "Ïä§ÌÉÄÎ≤ÖÏä§ Ïπ¥Îìú Îì±Î°ù")
                            Spacer()
                            ImageAndTextView(title: "Ïπ¥Îìú ÍµêÌôòÍ∂å Îì±Î°ù")
                        }
                        HStack {
                            ImageAndTextView(title: "Ïø†Ìè∞ Îì±Î°ù")
                            Spacer()
                            ImageAndTextView(title: "Ïø†Ìè∞ ÌûàÏä§ÌÜ†Î¶¨")
                        }
                    }
                    .frame(maxWidth: 420, maxHeight: 164)
                    .padding(.horizontal)
                    
                    Divider()
                    
                    Spacer()
                    
                    /*Í≥†Í∞ù ÏßÄÏõê*/
                    VStack(spacing: 0) {
                        HStack {
                            Text("Í≥†Í∞ù ÏßÄÏõê")
                                .font(.mainTextRegular18)
                            Spacer()
                        }
                        .padding(.vertical)
                        
                        HStack {
                            ImageAndTextView(title: "Ïä§ÌÜ†Ïñ¥ ÏºÄÏñ¥")
                            ImageAndTextView(title: "Í≥†Í∞ùÏùò ÏÜåÎ¶¨")
                        }
                        HStack {
                            ImageAndTextView(title: "Îß§Ïû• Ï†ïÎ≥¥")
                            ImageAndTextView(title: "Î∞òÎÇ©Í∏∞ Ï†ïÎ≥¥")
                        }
                        ImageAndTextView(title: "ÎßàÏù¥ Ïä§ÌÉÄÎ≤ÖÏä§ Î¶¨Î∑∞")
                    }
                    .frame(maxWidth: 420, maxHeight: 164)
                    .padding(.horizontal)
                    .padding(.bottom, 41)
                    Spacer()
                }
                .background(Color.white01)
                .frame(maxWidth: 440)
            }
            .ignoresSafeArea(.all)
        }
    }
    
    private func ButtonView(title: String) -> some View {
        
=======

struct OtherView: View {
    @AppStorage("nickname") var nickname: String = ""

    var body: some View {
        GeometryReader { geometry in
            VStack(spacing: 0) {
                HStack {
                    Text("Other")
                        .font(.mainTextBold24)
            
                    Spacer()
            
                    Button(action: {
                        print("Î°úÍ∑∏ÏïÑÏõÉ")
                    }, label: {
                        Image("logout")
                    })
                }
                .background(Color.white)
                .padding(.bottom, 16)
                .padding(.horizontal, 24)
                .frame(height: 80)
            
            VStack {
                /*ÏÉÅÎã® Í≥†Í∞ù Í¥ÄÎ†® Ï†ïÎ≥¥ Í∑∏Î£π*/
                VStack {
                    VStack {
                        HStack {
                            Text(nickname.isEmpty ? "(ÏûëÏÑ±Ìïú ÎãâÎÑ§ÏûÑ)" : "\(nickname)")
                                .foregroundStyle(Color.green01)
                            Text("Îãò")
                        }
                        .font(.mainTextSemiBold24)
                        Text("ÌôòÏòÅÌï©ÎãàÎã§!üôåüèª")
                            .font(.mainTextSemiBold24)
                    }
                    Spacer()
                    
                    HStack {
                        ButtonView(title: "Î≥Ñ ÌûàÏä§ÌÜ†Î¶¨")
                        ButtonView(title: "Ï†ÑÏûêÏòÅÏàòÏ¶ù")
                        ButtonView(title: "ÎÇòÎßåÏùò Î©îÎâ¥")
                    }
                }
                .frame(maxWidth: 440, maxHeight: 209)
                .padding(.top, 41)
                
                Spacer()
                
                /*Í≤∞Ï†ú*/
                VStack(spacing: 0) {
                    HStack {
                        Text("Pay")
                            .font(.mainTextRegular18)
                        Spacer()
                    }
                    
                    HStack {
                        ImageAndTextView(title: "Ïä§ÌÉÄÎ≤ÖÏä§ Ïπ¥Îìú Îì±Î°ù")
                        Spacer()
                        ImageAndTextView(title: "Ïπ¥Îìú ÍµêÌôòÍ∂å Îì±Î°ù")
                    }
                    HStack {
                        ImageAndTextView(title: "Ïø†Ìè∞ Îì±Î°ù")
                        Spacer()
                        ImageAndTextView(title: "Ïø†Ìè∞ ÌûàÏä§ÌÜ†Î¶¨")
                    }
                }
                .frame(maxWidth: 420, maxHeight: 164)
                .padding(.horizontal)
                
                Divider()
                
                Spacer()
                
                /*Í≥†Í∞ù ÏßÄÏõê*/
                VStack(spacing: 0) {
                    HStack {
                        Text("Í≥†Í∞ù ÏßÄÏõê")
                            .font(.mainTextRegular18)
                        Spacer()
                    }
                    .padding(.vertical)
                    
                    HStack {
                        ImageAndTextView(title: "Ïä§ÌÜ†Ïñ¥ ÏºÄÏñ¥")
                        ImageAndTextView(title: "Í≥†Í∞ùÏùò ÏÜåÎ¶¨")
                    }
                    HStack {
                        ImageAndTextView(title: "Îß§Ïû• Ï†ïÎ≥¥")
                        ImageAndTextView(title: "Î∞òÎÇ©Í∏∞ Ï†ïÎ≥¥")
                    }
                    ImageAndTextView(title: "ÎßàÏù¥ Ïä§ÌÉÄÎ≤ÖÏä§ Î¶¨Î∑∞")
                }
                .frame(maxWidth: 420, maxHeight: 164)
                .padding(.horizontal)
                .padding(.bottom, 41)
                Spacer()
            }
            .background(Color.white01)
            .frame(maxWidth: 440)
                
        }
        
    }
        
    
}

struct ButtonView: View {
    let title: String
    
//    initÏùÑ Î™ÖÏãúÏ†ÅÏúºÎ°ú ÌëúÏãú
//    init(title: String) {
//            print("CustomButton ÏÉùÏÑ±Îê®: \(title)")
//            self.title = title
//    }
    
    var body: some View {
>>>>>>> 3ac10618351a88174c94584bd41ab7878e819cf5
        Button(action: {
            print(title)
        }, label: {
            ZStack {
                RoundedRectangle(cornerRadius: 15)
                    .fill(Color.white)
                    .frame(width: 102, height: 108)
                    .shadow(color: .black.opacity(0.1), radius: 2.5, x: 0, y: 0)
                
                VStack(spacing: 4) {
                    Image(title)
                        .resizable()
                        .frame(width: 48, height: 48)
                    Text(title)
                        .font(.mainTextSemiBold16)
                        .foregroundStyle(Color.black03)
                }
                .padding(.vertical)
            }
        })
    }
<<<<<<< HEAD
    
    private func ImageAndTextView(title: String) -> some View {
        //    let title: String
=======
}
struct ImageAndTextView: View {
    let title: String
    
    var body: some View {
        
>>>>>>> 3ac10618351a88174c94584bd41ab7878e819cf5
        Button(action: {
            print(title)
        }, label: {
            HStack {
                Image(title)
                    .resizable()
                    .frame(width: 32, height: 32)
                Text(title)
                    .font(.mainTextSemiBold16)
                    .foregroundStyle(Color.black02)
            }
            Spacer()
        })
        .frame(minWidth: 157)
        .padding(.vertical, 16)
        .padding(.horizontal, 0)
    }
<<<<<<< HEAD
=======
    }
>>>>>>> 3ac10618351a88174c94584bd41ab7878e819cf5
}

#Preview {
    OtherView()
}
